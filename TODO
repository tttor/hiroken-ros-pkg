>> make a parameter server that contains all static obstacle ids
>> make service name under the node's name
>> make headers under ../include/pkg-name/
>> include smoothness and clearance in measuring path quality
>> why is there an inf edge cost? likely from: iter_cost = exp( (double)n_failure/(double)(n_success+n_failure) );// (n_success+n_failure) = goal_set.size()
>> what if there is really no path in the goal, rethink removing an edge
>> put texts in objects
>> refine randomized messy_cfg: do not overlap with tidy-spot
>> re-do motion planning for the cheapest almost-solution path, at the confirming step
>> grasp planner can use uniform/biased sampling strategy for discretization.
>> migrate to MoveIt! on Groovy
>> typedef typename graph_traits<GPMGraph>::vertex_descriptor Vertex; V.S. typedef typename GPMGraph::vertex_descriptor Vertex;
===
Done...
>> grasp_planner should receive information about jspace used. 
>> data path, dot paths, e.g. task graph, tmm should be in global variables set at .launch or centralized
>> adjust hiro_joint_controller.cpp to accept different jspaces
>> build object config. file + its parser
>> debug for tidying up with >= 5objects
>> geometric planning cost HAVE TO consider jspace
>> refine commit_grasp() in action_manager: the way to get eof_link
>> adjust hiro_joint_controller for dual arms, "rarm_joint_state_cmd" should be general, e.g. "joint_state_cmd", plus at the launch file for <rosparam param="source_list">['rarm_joint_state_cmd']</rosparam>
>> solve in go-home, why the arm hit the vase (at the goal pose), especially when using only J_arm see run.3obj.20130122.d
>> automate the way we set how many robots/eofs are in-duty
